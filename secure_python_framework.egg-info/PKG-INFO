Metadata-Version: 2.4
Name: secure_python_framework
Version: 0.1.0
Summary: A framework for encoding and decoding text using custom mappings.
Home-page: https://github.com/soundhearddev/Secure-Python-Framework.git
Author: Soundheard
License: MIT License
        
        Copyright (c) 2023 [Your Name]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        1. The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        2. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Secure Python Framework

## Overview

The Secure Python Framework provides a set of tools for encoding and decoding text using a custom mapping system. It is designed to enhance the security of sensitive information by obfuscating it before storage or transmission.

## Features

- Encode and decode text using a custom mapping.
- Save and load mappings for reuse.
- Unit tests to ensure functionality.

## Installation

To install the Secure Python Framework, you can use pip. Run the following command in your terminal:

```
pip install -e .
```

## Usage

After installation, you can import the framework in your Python projects:

```python
import secure_python

# Example of creating a random mapping
mapping = secure_python.crm()

# Encoding text
encoded_text = secure_python.et("Your sensitive data", mapping)

# Decoding text
decoded_text = secure_python.dt(encoded_text, mapping)
```

## Running Tests

you need to have a python file in the directory and have it written in the encode_test_use end decode_test_use. First run the encoder and then run the decoder. The decoder uses exec to run the file. you can use it like in the example, but can also use functions, classes, etc.

```

```

## License

This project is licensed under the MIT License. See the LICENSE file for more details.
